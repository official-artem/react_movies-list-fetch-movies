{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/FindMovie/FindMovie.tsx","api.ts","components/MoviesList/MoviesList.tsx","App.tsx","index.tsx"],"names":["MovieCard","memo","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","FindMovie","onAddMovie","useState","setMovie","inputValue","setInputValue","isError","setIsError","isLoading","setIsLoading","handleClickSumbit","query","fetch","then","res","json","catch","Response","Error","movie_API","Title","Plot","Poster","imdbID","imdbId","finally","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","cn","disabled","onClick","prev","some","m","MoviesList","movies","map","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f839e7de.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = memo(\n  ({ movie }) => (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={movie.imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {movie.description}\n          <br />\n          <a href={movie.imdbUrl} data-cy=\"movieURL\">\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  ),\n);\n","import cn from 'classnames';\nimport React, { memo, useState } from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  onAddMovie: React.Dispatch<React.SetStateAction<Movie[]>>;\n};\n\nconst defaultPicture = (\n  'https://via.placeholder.com/360x270.png?text=no%20preview'\n);\n\nexport const FindMovie: React.FC<Props> = memo(\n  ({ onAddMovie }) => {\n    const [movie, setMovie] = useState<Movie | null>(null);\n    const [inputValue, setInputValue] = useState('');\n    const [isError, setIsError] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const handleClickSumbit = () => {\n      if (inputValue) {\n        setIsLoading(true);\n\n        getMovie(inputValue)\n          .then(movie_API => {\n            if ('Error' in movie_API) {\n              setIsError(true);\n            } else {\n              setMovie({\n                title: movie_API.Title,\n                description: movie_API.Plot,\n                imgUrl: movie_API.Poster !== 'N/A'\n                  ? movie_API.Poster\n                  : defaultPicture,\n                imdbUrl: `https://www.imdb.com/title/${movie_API.imdbID}`,\n                imdbId: movie_API.imdbID,\n              });\n            }\n          })\n          .finally(() => setIsLoading(false));\n      }\n    };\n\n    const clear = () => {\n      setMovie(null);\n      setInputValue('');\n    };\n\n    const handleClickAddMovie = () => {\n      onAddMovie((prev) => {\n        if (movie && !prev.some(m => m.imdbId === movie.imdbId)) {\n          return [...prev, movie];\n        }\n\n        return prev;\n      });\n\n      clear();\n    };\n\n    const handleChangeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n      setInputValue(event.target.value);\n\n      setIsError(false);\n    };\n\n    return (\n      <>\n        <form\n          className=\"find-movie\"\n          onSubmit={(event) => {\n            event.preventDefault();\n            handleClickSumbit();\n          }}\n        >\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"movie-title\">\n              Movie title\n            </label>\n\n            <div className=\"control\">\n              <input\n                data-cy=\"titleField\"\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className=\"input is-dander\"\n                value={inputValue}\n                onChange={handleChangeInput}\n              />\n            </div>\n\n            {isError && (\n              <p className=\"help is-danger\" data-cy=\"errorMessage\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )}\n          </div>\n\n          <div className=\"field is-grouped\">\n            <div className=\"control\">\n              <button\n                data-cy=\"searchButton\"\n                type=\"submit\"\n                className={cn(\n                  'button is-light',\n                  { 'is-loading': isLoading },\n                )}\n                disabled={!inputValue}\n\n              >\n                {!movie\n                  ? 'Find a movie'\n                  : 'Search again'}\n              </button>\n            </div>\n\n            {movie && (\n              <div className=\"control\">\n                <button\n                  data-cy=\"addButton\"\n                  type=\"button\"\n                  className=\"button is-primary\"\n                  onClick={handleClickAddMovie}\n                >\n                  Add to the list\n                </button>\n              </div>\n            )}\n          </div>\n        </form>\n\n        {movie && (\n          <div className=\"container\" data-cy=\"previewContainer\">\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={movie} />\n          </div>\n        )}\n      </>\n    );\n  },\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=df443de';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { useState } from 'react';\nimport './App.scss';\nimport { FindMovie } from './components/FindMovie';\nimport { MoviesList } from './components/MoviesList';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  // const [array, setArray] = useState<MovieData | ResponseError>();\n  const [movies, setMovie] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList\n          movies={movies}\n        />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          onAddMovie={setMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}